/**Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
 * By starting with  and , the first  terms will be:
 * By considering the terms in the Fibonacci sequence whose values do not exceed , 
 * find the sum of the even-valued terms.
 * 
 */
import java.util.Scanner;


public class EvenFibonacciNumbers {

	public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int t = in.nextInt();
        
        // declaration 
        long evenFib1 = 0;
        long evenFib2 = 2;
        long evenFib3;
        long sum = 0;
        // loop for input amount
        for(int a0 = 0; a0 < t; a0++){
            long n = in.nextLong(); // limit
            // declaration 
            evenFib1 = 0;
            evenFib2 = 2;
            evenFib3 = 0;
            sum = 0;
            
            // break less if n amount is less than 2
            if ( n < 2){
                System.out.println(sum); // display the answer
            }
            
            // loop while the second Fn2 is less than the limit
            else {
                sum = 2;
                while ( evenFib2 < n){
                	System.out.println("EF1 start: " + evenFib1); // display the answer
                	System.out.println("EF2 start: " + evenFib2); // display the answer
                    evenFib3 = 4 * evenFib2 + evenFib1;
                    System.out.println("Next EF start: " + evenFib3); // display the answer
                    
                    if ( evenFib3 > n) // break is the sum is more than the limit
                        break;
                    evenFib1 = evenFib2; // change Fn2 to Fn1
                    System.out.println("New EF1: " + evenFib1); // display the answer
                    evenFib2 = evenFib3; // change the sum of Fn1 and Fn2 to Fn2 (equation of the sum)
                    System.out.println("New EF2: " + evenFib2); // display the answer
                    sum += evenFib3; // add the last index to the sum as required for the task
                    System.out.println("In the loop sum: " + sum); // display the answer
                
                }
                System.out.println(sum); // display the answer
            }
        }
    }
}
